################################################################################
# GitHub Search MCP - Requirements & Setup Guide
################################################################################

# =============================================================================
# SYSTEM REQUIREMENTS
# =============================================================================
# Node.js: v18.0.0 or higher
# npm: v8.0.0 or higher (comes with Node.js)
# Git: Latest version (for cloning repository)
# Operating System: Windows 10/11, macOS 10.15+, or Linux (Ubuntu 20.04+)
# RAM: Minimum 4GB (8GB recommended)
# Browser: Chrome, Firefox, Safari, or Edge (latest versions)

# =============================================================================
# ENVIRONMENT CONFIGURATION (.env file)
# =============================================================================
# Create a .env file in the root directory with the following content:
#
# GITHUB_TOKEN=your_github_personal_access_token_here
# PORT=3000
# 
# Optional AI Service Integration (for production):
# OPENAI_API_KEY=your_openai_api_key_here
# ANTHROPIC_API_KEY=your_anthropic_api_key_here
# GEMINI_API_KEY=your_google_gemini_api_key_here
# AI_SERVICE=openai  # Options: openai, anthropic, gemini, mock (default)
#
# To get a GitHub Personal Access Token:
# 1. Go to https://github.com/settings/tokens
# 2. Click "Generate new token" → "Generate new token (classic)"
# 3. Give it a name: "GitHub Search MCP"
# 4. Select scopes:
#    - repo (for private repositories)
#    - public_repo (for public repositories only)
# 5. Copy the generated token and paste it in the .env file

# =============================================================================
# NODE.JS DEPENDENCIES (from package.json)
# =============================================================================
# Production Dependencies:
# ------------------------
# @modelcontextprotocol/sdk@^0.4.0    # MCP protocol implementation
# axios@^1.6.0                        # HTTP client for API requests
# cors@^2.8.5                         # Cross-Origin Resource Sharing
# dotenv@^16.6.1                      # Environment variable management
# express@^4.18.2                     # Web server framework
# node-fetch@^3.3.2                   # Fetch API for Node.js
#
# Optional AI Integration Dependencies (for production):
# -------------------------------------------------------
# openai@^4.0.0                       # OpenAI API client (optional)
# @anthropic-ai/sdk@^0.9.0            # Anthropic Claude API (optional)
# @google/generative-ai@^0.1.0        # Google Gemini API (optional)
#
# Development Dependencies:
# ------------------------
# nodemon@^3.0.1                      # Auto-restart on file changes

# =============================================================================
# INSTALLATION STEPS
# =============================================================================
# 1. Clone the repository:
#    git clone <repository-url>
#    cd Github-search-MCP
#
# 2. Install Node.js dependencies:
#    npm install
#
# 3. Create .env file (see ENVIRONMENT CONFIGURATION above)
#
# 4. Start the application:
#    npm start
#    OR for development with auto-reload:
#    npm run dev

# =============================================================================
# QUICK START OPTIONS
# =============================================================================
# Windows:
# --------
# Option 1: Double-click 'start.bat' (auto-installs everything)
# Option 2: Run PowerShell script: .\quick-start.ps1
# Option 3: Manual setup: npm install && npm start
#
# macOS/Linux:
# ------------
# Option 1: Run shell script: ./run.sh
# Option 2: npm run setup:unix
# Option 3: Manual setup: npm install && npm start

# =============================================================================
# API RATE LIMITS
# =============================================================================
# GitHub API Rate Limits:
# - Without token: 60 requests/hour
# - With token: 5,000 requests/hour
# - Search API: 30 requests/minute
#
# Ensure your token has sufficient permissions to avoid rate limiting

# =============================================================================
# PORT CONFIGURATION
# =============================================================================
# Default port: 3000
# If port 3000 is in use, change it in the .env file:
# PORT=3001 (or any available port)

# =============================================================================
# MCP INTEGRATION (for AI Assistants)
# =============================================================================
# For Claude Desktop integration, add to your config:
# {
#   "mcpServers": {
#     "github-search": {
#       "command": "node",
#       "args": ["path/to/Github-search-MCP/src/server.js"],
#       "env": {
#         "GITHUB_TOKEN": "your_github_token_here"
#       }
#     }
#   }
# }

# =============================================================================
# TROUBLESHOOTING
# =============================================================================
# Common Issues:
# 
# 1. "Cannot find module" errors:
#    Solution: Run 'npm install' to install dependencies
#
# 2. "GITHUB_TOKEN is not defined":
#    Solution: Create .env file with your GitHub token
#
# 3. "Port 3000 is already in use":
#    Solution: Change PORT in .env file to an available port
#
# 4. "Rate limit exceeded":
#    Solution: Add valid GitHub token or wait for rate limit reset
#
# 5. "Node version error":
#    Solution: Update Node.js to v18.0.0 or higher

# =============================================================================
# OPTIONAL CONFIGURATIONS
# =============================================================================
# Additional environment variables you can set in .env:
#
# NODE_ENV=development                # Set to 'production' for production
# LOG_LEVEL=debug                     # Options: debug, info, warn, error
# MAX_CONCURRENT_SEARCHES=10          # Limit concurrent branch searches
# CACHE_TTL=3600                      # Cache time-to-live in seconds
# ENABLE_CORS=true                    # Enable/disable CORS

# =============================================================================
# AI FEATURES & CAPABILITIES
# =============================================================================
# The application includes AI-powered features with mock implementations:
#
# 1. Repository Search Modes:
#    - Public: Search globally across all GitHub repositories
#    - Organization: Search within specific organizations only
#
# 2. AI Repository Analysis:
#    - One-click AI summaries for any repository
#    - Interactive file tree explorer with AI file analysis
#    - Language distribution visualization
#    - Auto-generated 100-word summaries for selected repos
#
# 3. API Endpoints for AI Features:
#    - /api/ai/repository-summary    # Generate repository summaries
#    - /api/ai/repository-analysis   # Comprehensive repo analysis
#    - /api/ai/file-analysis         # Individual file analysis
#    - /api/repository/structure     # Get repository file tree
#    - /api/repository/languages     # Get language statistics
#
# 4. Production AI Integration:
#    To enable real AI features in production, add API keys to .env:
#    - OpenAI: OPENAI_API_KEY=your_key
#    - Anthropic: ANTHROPIC_API_KEY=your_key
#    - Google Gemini: GEMINI_API_KEY=your_key
#
# =============================================================================
# PROJECT STRUCTURE
# =============================================================================
# Github-search-MCP/
# ├── .env                    # Environment variables (create this)
# ├── package.json            # Node.js dependencies and scripts
# ├── requirements.txt        # This file - setup documentation
# ├── src/
# │   ├── server.js          # Main server & MCP implementation
# │   └── github-searcher.js # GitHub API integration
# ├── public/
# │   ├── index.html         # Web interface with AI features
# │   ├── script.js          # Frontend JavaScript with AI logic
# │   └── styles.css         # Styling including AI components
# ├── config/
# │   └── mcp-server.json    # MCP server configuration
# ├── scripts/
# │   └── setup.js           # Setup utilities
# └── test-features.html     # Test page for AI features

# =============================================================================
# SUPPORT & DOCUMENTATION
# =============================================================================
# README.md                   # Full documentation
# GETTING-STARTED.md         # Quick start guide
# CHANGES_SUMMARY.md         # Recent changes and updates
# LICENSE                    # MIT License

################################################################################
# End of Requirements Documentation
################################################################################ 